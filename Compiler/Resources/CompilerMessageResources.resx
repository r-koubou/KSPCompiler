<?xml version="1.0" encoding="utf-8"?>

<root>
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:element name="root" msdata:IsDataSet="true">

        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="syntax.error" xml:space="preserve">
        <value>Syntax error</value>
    </data>
    <data name="synax.error.detail" xml:space="preserve">
        <value>Syntax error: {0}</value>
    </data>
    <data name="symbol.error.declare.variable.outside" xml:space="preserve">
        <value>Variable {0} declaration outside of callback scope</value>
    </data>
    <data name="symbol.error.declare.variable.reserved" xml:space="preserve">
        <value>Variable name {0} is reserved</value>
    </data>
    <data name="symbol.error.declare.variable.ni_reserved" xml:space="preserve">
        <value>Variable name {0} contains NI reserved prefix</value>
    </data>
    <data name="symbol.error.declare.variable.already" xml:space="preserve">
        <value>Variable name {0} has already declared</value>
    </data>
    <data name="symbol.error.declare.variable.unkown" xml:space="preserve">
        <value>Unknown type: {0}</value>
    </data>
    <data name="symbol.waring.declare.oninit" xml:space="preserve">
        <value>Variable {0} declaration outside of `on init` callback scope</value>
    </data>
    <data name="symbol.warning.declare.callback.unkown" xml:space="preserve">
        <value>Unknown callback: {0}</value>
    </data>
    <data name="symbol.error.declare.callback.already" xml:space="preserve">
        <value>Callback {0} has already declared</value>
    </data>
    <data name="symbol.error.declare.userfunction.already" xml:space="preserve">
        <value>User function {0} has already declared</value>
    </data>
    <data name="semantic.error.binaryoprator.compatible" xml:space="preserve">
        <value>Not compatible : left and right side expression ( {0}, {1} )</value>
    </data>
    <data name="semantic.error.variable.not.declared" xml:space="preserve">
        <value>Variable not declared: {0}</value>
    </data>
    <data name="semantic.error.unrayoprator.bitnot.compatible" xml:space="preserve">
        <value>Unary operator .not. available integer types only</value>
    </data>
    <data name="semantic.error.variable.invalid.string.initializer" xml:space="preserve">
        <value>String type is not support initializer</value>
    </data>
    <data name="semantic.error.string.operator.conditional" xml:space="preserve">
        <value>Conditional expressions cannot be concatenated with string operators</value>
    </data>
    <data name="semantic.error.assign.to.constant" xml:space="preserve">
        <value>Cannot assign value ({0} is constant)</value>
    </data>
    <data name="semantic.error.assign.type.compatible" xml:space="preserve">
        <value>":=" : not compatible type ({0} := {1})</value>
    </data>
    <data name="semantic.error.binaryoprator.not.supported" xml:space="preserve">
        <value>Contains types not supported by the binary operator {0}, {1}</value>
    </data>
    <data name="semantic.error.unaryoprator.not.supported" xml:space="preserve">
        <value>Contains types not supported by unary operators {0}</value>
    </data>
    <data name="semantic.error.variable.arrayoutofbounds" xml:space="preserve">
        <value>Array Index Out of Bounds (Array size: {0}, Index: {1})</value>
    </data>
    <data name="semantic.error.variable.uninitialized" xml:space="preserve">
        <value>{0} is required initializer</value>
    </data>
</root>
