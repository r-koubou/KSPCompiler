<root>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="synax.error.detail" xml:space="preserve">
        <value>文法エラー: {0}</value>
    </data>
    <data name="syntax.error" xml:space="preserve">
        <value>文法エラー</value>
    </data>
    <data name="symbol.error.declare.variable.outside" xml:space="preserve">
        <value>変数 {0} はコールバック外で宣言できません</value>
    </data>
    <data name="symbol.error.declare.variable.reserved" xml:space="preserve">
        <value>変数名 {0} は予約されています</value>
    </data>
    <data name="symbol.error.declare.variable.ni_reserved" xml:space="preserve">
        <value>変数名 {0} は NI で予約されている接頭文字を含んでいます</value>
    </data>
    <data name="symbol.error.declare.variable.already" xml:space="preserve">
        <value>変数名 {0} は既に宣言されています</value>
    </data>
    <data name="symbol.waring.declare.oninit" xml:space="preserve">
        <value>変数 {0} は `on init` コールバック以外の場所で宣言されています</value>
    </data>
    <data name="symbol.error.declare.variable.unkown" xml:space="preserve">
        <value>不明なデータ型: {0}</value>
    </data>
    <data name="symbol.warning.declare.callback.unkown" xml:space="preserve">
        <value>不明な コールバック: {0} </value>
    </data>
    <data name="symbol.error.declare.callback.already" xml:space="preserve">
        <value>コールバック {0} は既に宣言されています</value>
    </data>
    <data name="symbol.error.declare.userfunction.already" xml:space="preserve">
        <value>ユーザー関数 {0} は既に宣言されています</value>
    </data>
    <data name="semantic.error.binaryoprator.compatible" xml:space="preserve">
        <value>左辺と右辺のデータ型が異なっています ( {0}, {1} )</value>
    </data>
    <data name="semantic.error.variable.not.declared" xml:space="preserve">
        <value>宣言されていない変数です: {0}</value>
    </data>
    <data name="semantic.error.unrayoprator.bitnot.compatible" xml:space="preserve">
        <value>単項演算子  .not. は整数にのみ使用できます</value>
    </data>
    <data name="semantic.error.variable.invalid.string.initializer" xml:space="preserve">
        <value>String型には初期値代入を行うことはできません</value>
    </data>
    <data name="semantic.error.string.operator.conditional" xml:space="preserve">
        <value>条件式は文字列演算子と連結できません</value>
    </data>
    <data name="semantic.error.assign.to.constant" xml:space="preserve">
        <value>値の代入ができません ({0} は定数型です)</value>
    </data>
    <data name="semantic.error.assign.type.compatible" xml:space="preserve">
        <value>":=" : データ型が一致しません ({0} := {1})</value>
    </data>
    <data name="semantic.error.binaryoprator.not.supported" xml:space="preserve">
        <value>2項演算子がサポートしていない型が含まれています {0}, {1}</value>
    </data>
    <data name="semantic.error.unaryoprator.not.supported" xml:space="preserve">
        <value>単項演算子がサポートしていない型が含まれています {0}</value>
    </data>
    <data name="semantic.error.variable.array.outofbounds" xml:space="preserve">
        <value>配列要素数の範囲外アクセスです (配列要素数: {0}, インデックス: {1})</value>
    </data>
    <data name="semantic.error.variable.uninitialized" xml:space="preserve">
        <value>{0}: 初期化が必要です</value>
    </data>
    <data name="semantic.error.array.subscript.compatible" xml:space="preserve">
        <value>添字の型が整数型ではありません  ({0})</value>
    </data>
</root>
