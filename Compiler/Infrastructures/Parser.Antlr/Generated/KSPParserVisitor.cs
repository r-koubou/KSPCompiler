//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from KSPParser.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace KSPCompiler.Infrastructures.Parser.Antlr {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="KSPParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.CLSCompliant(false)]
public interface IKSPParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompilationUnit([NotNull] KSPParser.CompilationUnitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.declarationModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclarationModifier([NotNull] KSPParser.DeclarationModifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.callbackDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallbackDeclaration([NotNull] KSPParser.CallbackDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.argumentDefinitionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgumentDefinitionList([NotNull] KSPParser.ArgumentDefinitionListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.userFunctionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUserFunctionDeclaration([NotNull] KSPParser.UserFunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] KSPParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] KSPParser.VariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.variableInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableInitializer([NotNull] KSPParser.VariableInitializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.primitiveInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveInitializer([NotNull] KSPParser.PrimitiveInitializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.arrayInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayInitializer([NotNull] KSPParser.ArrayInitializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.uiInitializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUiInitializer([NotNull] KSPParser.UiInitializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] KSPParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.kspPreprocessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKspPreprocessor([NotNull] KSPParser.KspPreprocessorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.kspPreprocessorDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKspPreprocessorDefine([NotNull] KSPParser.KspPreprocessorDefineContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.kspPreprocessorUndefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKspPreprocessorUndefine([NotNull] KSPParser.KspPreprocessorUndefineContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.kspPreprocessorIfdefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKspPreprocessorIfdefine([NotNull] KSPParser.KspPreprocessorIfdefineContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.kspPreprocessorIfnotDefine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKspPreprocessorIfnotDefine([NotNull] KSPParser.KspPreprocessorIfnotDefineContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] KSPParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.selectStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelectStatement([NotNull] KSPParser.SelectStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.caseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseBlock([NotNull] KSPParser.CaseBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] KSPParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.continueStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueStatement([NotNull] KSPParser.ContinueStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.callKspUserFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallKspUserFunction([NotNull] KSPParser.CallKspUserFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] KSPParser.ExpressionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExpression([NotNull] KSPParser.PrimaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.postfixExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostfixExpression([NotNull] KSPParser.PostfixExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpression([NotNull] KSPParser.AssignmentExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.assignmentExpressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpressionList([NotNull] KSPParser.AssignmentExpressionListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentOperator([NotNull] KSPParser.AssignmentOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] KSPParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionList([NotNull] KSPParser.ExpressionListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.stringConcatenateExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringConcatenateExpression([NotNull] KSPParser.StringConcatenateExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.logicalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalOrExpression([NotNull] KSPParser.LogicalOrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.logicalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalAndExpression([NotNull] KSPParser.LogicalAndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.logicalXorExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalXorExpression([NotNull] KSPParser.LogicalXorExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.bitwiseOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitwiseOrExpression([NotNull] KSPParser.BitwiseOrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.bitwiseAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitwiseAndExpression([NotNull] KSPParser.BitwiseAndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.bitwiseXorExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitwiseXorExpression([NotNull] KSPParser.BitwiseXorExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExpression([NotNull] KSPParser.EqualityExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExpression([NotNull] KSPParser.RelationalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpression([NotNull] KSPParser.AdditiveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpression([NotNull] KSPParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KSPParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpression([NotNull] KSPParser.UnaryExpressionContext context);
}
} // namespace KSPCompiler.Infrastructures.Parser.Antlr
